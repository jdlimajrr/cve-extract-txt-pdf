import os
from flask import Flask, request, send_from_directory, render_template_string
from vulnerability_extractor import main as vulnerability_extractor_main

app = Flask(__name__)
UPLOAD_FOLDER = "uploads"
app.config["DEBUG"] = True

@app.route("/", methods=["GET"])
def upload_form():
    return render_template_string('''
    <h1>Upload a vulnerability file</h1>
    <form method="post" action="/upload" enctype="multipart/form-data">
        <input type="file" name="file">
        <input type="submit" value="Upload">
    </form>
    ''')

@app.route("/upload", methods=["POST"])
def upload_file():
    if request.method == "POST":
        file = request.files["file"]
        if not os.path.exists(UPLOAD_FOLDER):
            os.makedirs(UPLOAD_FOLDER)
        file_path = os.path.join(UPLOAD_FOLDER, file.filename)
        file.save(file_path)

        output_file_path = file_path.rsplit(".", 1)[0] + "_result.txt"
        vulnerability_extractor_main(file_path, output_file_path)

        return send_from_directory(UPLOAD_FOLDER, os.path.basename(output_file_path), as_attachment=True)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
